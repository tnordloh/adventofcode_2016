working backwards from the answer:
[17,7,19,5,3,13].zip([1,0,2,0,0,5])
  .map { |x,y| 
  [x, 317371 % x + y]
}.each { |v| puts "value #{v.join(",")}"}
gives us these.

value 17,16 ## 317371 % 17 = 16 or (17 - (1 % 17)
value 7,5   ## 317371 %  7 =  5 or ( 7 - (2 %  7)
value 19,16 ## 317371 % 19 = 16 or (19 - (3 % 19)
value 5,1   ## 317371 %  5 =  1 or ( 5 - (4 %  5)
value 3,1   ## 317371 %  3 =  1 or ( 3 - (5 %  3)
value 13,7  ## 316371 % 13 =  7 or ( 4 - (6 % 13)

this generalizes to 
wheel_size - (wheel_placement % wheel_size)

This should give us the final position of each wheel.

first wheel needs to be at 16, and it starts at 1
16 - 1 is 15
So the first valid position is 15
for 7, it is 5 (5 - 0)
19 is 14 (16 - 2) 
5 is 1 (5 - 0) 
3 is 1 (1 - 0
13 is 2 (7 - 5)
so, here:wq

wheel 3 starts at position 2.  It needs to be at position 16
to get to 14 we need to advance the wheel 14 spaces. Applying that to all wheels
goal = 16 - 2 = 14


